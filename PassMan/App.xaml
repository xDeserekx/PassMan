<Application x:Class="PassMan.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
              xmlns:local="clr-namespace:PassMan.Helpers"
             StartupUri="/Views/Windows/MainWindow.xaml">
    <Application.Resources>

        <ResourceDictionary>

            <Style TargetType="TextBox" x:Key="TextboxWatermark">
                <Setter Property="Template" >
                    <Setter.Value>
                        <ControlTemplate TargetType="TextBox">
                            <Border x:Name="border" CornerRadius="5" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}">
                                <Grid Margin="10,0">
                                    <TextBlock x:Name="watermark" VerticalAlignment="Center" Visibility="Collapsed" FontSize="{TemplateBinding FontSize}" Opacity="0.4" Text="{TemplateBinding Tag}"></TextBlock>
                                    <ScrollViewer x:Name="PART_ContentHost" VerticalAlignment="Center"></ScrollViewer>
                                    <Rectangle x:Name="rect" Fill="Transparent" Height="2" VerticalAlignment="Bottom" HorizontalAlignment="Stretch" Margin="0,3"></Rectangle>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <EventTrigger RoutedEvent="GotFocus">
                                    <BeginStoryboard>
                                        <Storyboard>
                                           
                                            <DoubleAnimation Storyboard.TargetProperty="Height" AutoReverse="True" From="30" To="40" Duration="0:0:0.15" >
                                                <DoubleAnimation.EasingFunction>
                                                    <CubicEase ></CubicEase>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                                <Trigger Property="IsFocused" Value="true">
                                    <Setter TargetName="rect" Property="Fill" Value="{Binding ElementName=border, Path=BorderBrush}"></Setter>
                                </Trigger>
                                <Trigger Property="Text" Value="">
                                    <Setter TargetName="watermark" Property="Visibility" Value="Visible"></Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="GridViewColumnHeaderStyle1" TargetType="{x:Type GridViewColumnHeader}">
                <Setter Property="Foreground" Value="white" />
                <Setter Property="Background" Value="#FF1E1F2C" />
                <Setter Property="FontFamily" Value="Arial" />
                <Setter Property="FontSize" Value="12" />
            </Style>

            <Style x:Key="RoundCorner2" TargetType="{x:Type Button}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border x:Name="border" Background="DarkGreen" BorderThickness="0" CornerRadius="10">
                                <Border.Effect>
                                    <DropShadowEffect BlurRadius="7" Direction="330" Color="Black" ShadowDepth="4" Opacity="0.3"></DropShadowEffect>
                                </Border.Effect>
                                <ContentPresenter x:Name="cp" Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" TextBlock.Foreground="White"></ContentPresenter>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="border" Property="Background" Value="darkgray"></Setter>
                                    <Setter TargetName="cp" Property="TextBlock.Foreground" Value="white"></Setter>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="border" Property="Background" Value="green"></Setter>
                                    <Setter TargetName="cp" Property="TextBlock.Foreground" Value="White"></Setter>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="border" Property="Background" Value="green"></Setter>
                                    <Setter TargetName="cp" Property="TextBlock.Foreground" Value="White"></Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            
            <Style x:Key="ExitVaultButton" TargetType="{x:Type Button}">
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Padding" Value="1"/>
                <Setter Property="Foreground" Value="white"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid x:Name="grid">
                                <Border x:Name="border" BorderBrush="Transparent" BorderThickness="2">
                                    <Border.Background>
                                        <RadialGradientBrush GradientOrigin="0.496,1.052">
                                            <RadialGradientBrush.RelativeTransform>
                                                <TransformGroup>
                                                    <ScaleTransform CenterX="1.5" CenterY="1.5" 
                                                ScaleX="1.5" ScaleY="1.5"/>
                                                    <TranslateTransform X="0.02" Y="0.3"/>
                                                </TransformGroup>
                                            </RadialGradientBrush.RelativeTransform>
                                            <GradientStop Offset="1" Color="Transparent"/>

                                        </RadialGradientBrush>
                                    </Border.Background>
                                    <ContentPresenter HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  TextElement.FontWeight="Bold">
                                    </ContentPresenter>
                                </Border>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                    
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="White"/>
                        <Setter Property="Opacity" Value="0.4"/>
                        <Setter Property="Foreground" Value="Red"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style TargetType="PasswordBox" x:Key="PasswordboxWatermark">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="PasswordBox">
                            <Border x:Name="border" CornerRadius="5" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}">
                                <Grid Margin="10,0">
                                    <TextBlock x:Name="watermark" VerticalAlignment="Center" Visibility="Collapsed" FontSize="{TemplateBinding FontSize}" Opacity="0.4" Text="{TemplateBinding Tag}" IsHitTestVisible="False"/>
                                    <ScrollViewer x:Name="PART_ContentHost" VerticalAlignment="Center"/>
                                    <Rectangle x:Name="rect" Fill="Transparent" Height="2" VerticalAlignment="Bottom" HorizontalAlignment="Stretch" Margin="0,3"/>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <EventTrigger RoutedEvent="GotFocus">
                                    <BeginStoryboard>
                                        <Storyboard>

                                            <DoubleAnimation Storyboard.TargetProperty="Height" AutoReverse="True" From="30" To="40" Duration="0:0:0.15">
                                                <DoubleAnimation.EasingFunction>
                                                    <CubicEase/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                                <Trigger Property="IsFocused" Value="true">
                                    <Setter TargetName="rect" Property="Fill" Value="{Binding ElementName=border, Path=BorderBrush}"/>
                                </Trigger>
                                <DataTrigger Binding="{Binding Path=(local:PasswordBoxHelper.Password), RelativeSource={RelativeSource Self}}" Value="">
                                    <Setter TargetName="watermark" Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=(local:PasswordBoxHelper.Password), RelativeSource={RelativeSource Self}}" Value="{x:Null}">
                                    <Setter TargetName="watermark" Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=(local:PasswordBoxHelper.Password), RelativeSource={RelativeSource Self}}">
                                    <Setter TargetName="watermark" Property="Visibility" Value="Collapsed"/>
                                </DataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="Button" x:Key="CustomButton" BasedOn="{StaticResource {x:Type Button}}">
                <Setter Property="Height" Value="25" />
                <Setter Property="Width" Value="25"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}" CornerRadius="50"
                        BorderThickness="0" BorderBrush="White">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="White"/>
                        <Setter Property="Opacity" Value="0.4"/>
                        <Setter Property="Foreground" Value="DarkGray"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
            
        </ResourceDictionary>


    </Application.Resources>


</Application>
